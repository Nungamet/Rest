import json
import time
from datetime import datetime

class DataManager:
    def __init__(self):
        self.recipes = self.load_default_recipes()
        self.orders = []
        self.online_users = []
        self.current_user = ""
        self.is_admin = False
        self.notifications = []
    
    def set_user(self, username, password=""):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        self.current_user = username
        self.is_admin = self.check_admin(username, password)
    
    def check_admin(self, username, password):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º"""
        from config import ADMIN_USERS
        return username == "Admin" and password == ADMIN_USERS["Admin"]
    
    def load_default_recipes(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤"""
        return {
            1: {"name": "ü•© –°—Ç–µ–π–∫ —Å –∫–∞—Ä—Ç–æ—Ñ–µ–ª–µ–º", "price": 85},
            2: {"name": "üç≤ –ú—è—Å–Ω–æ–µ —Ä–∞–≥—É", "price": 75},
            3: {"name": "üå∂Ô∏è –ë–∞–Ω–∫–∞ —á–∏–ª–∏", "price": 65},
            4: {"name": "üçù –°–ø–∞–≥–µ—Ç—Ç–∏", "price": 55},
            5: {"name": "ü•ß –ü–∞—Å—Ç—É—à–∏–π –ø–∏—Ä–æ–≥", "price": 90},
            6: {"name": "üçú –ö—É—Ä–∏–Ω—ã–π —Å—É–ø", "price": 60},
            7: {"name": "ü•£ –û–≤–æ—â–Ω–æ–µ —Ä–∞–≥—É", "price": 45},
            8: {"name": "üç≤ –†–∞–≥—É –ì–∞–º–±–æ", "price": 70},
            9: {"name": "üçû –ö—É–∫—É—Ä—É–∑–Ω—ã–π —Ö–ª–µ–±", "price": 35},
            10: {"name": "üéÉ –¢—ã–∫–≤–µ–Ω–Ω—ã–π –ø–∏—Ä–æ–≥", "price": 50},
            11: {"name": "üå≠ –ß–∏–ª–∏-–¥–æ–≥", "price": 40},
            12: {"name": "üåÆ –†—ã–±–Ω—ã–µ —Ç–∞–∫–æ", "price": 45},
            13: {"name": "üç≥ –í–∞—Ä–µ–Ω–æ–µ —è–π—Ü–æ", "price": 20},
            14: {"name": "ü´ê –ß–µ—Ä–Ω–∏–∫–∞", "price": 15},
            15: {"name": "üçØ –ë–∞–Ω–∫–∞ –º—ë–¥–∞", "price": 30},
            16: {"name": "ü•´ –ë–∞–Ω–∫–∞ –±—É–ª—å–æ–Ω–∞", "price": 35}
        }
    
    def load_recipes_from_dict(self, recipes_dict):
        """–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∏–∑ —Å–ª–æ–≤–∞—Ä—è (–∏–∑ Firebase)"""
        if recipes_dict:
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–ª—é—á–∏ –≤ int –µ—Å–ª–∏ –æ–Ω–∏ —Å—Ç—Ä–æ–∫–∏
            converted_recipes = {}
            for key, value in recipes_dict.items():
                try:
                    converted_recipes[int(key)] = value
                except (ValueError, TypeError):
                    converted_recipes[key] = value
            self.recipes = converted_recipes
    
    def get_all_recipes(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤"""
        return self.recipes
    
    def get_recipes_by_category(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–æ–≤ - —Ç–æ–ª—å–∫–æ –≤–∫–ª–∞–¥–∫–∞ '–í—Å–µ –±–ª—é–¥–∞'"""
        # –í–û–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–∞—Ä—å, –∞ –Ω–µ —Å–ø–∏—Å–æ–∫
        return {
            "–í—Å–µ –±–ª—é–¥–∞": self.recipes  # –≠—Ç–æ —Å–ª–æ–≤–∞—Ä—å {id: recipe}
        }
    
    def add_recipe(self, name, price):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞ –≤ –º–µ–Ω—é"""
        new_id = max(self.recipes.keys()) + 1 if self.recipes else 1
        self.recipes[new_id] = {"name": name, "price": price}
        return new_id
    
    def update_recipe(self, recipe_id, name, price):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ä–µ—Ü–µ–ø—Ç–∞"""
        if recipe_id in self.recipes:
            self.recipes[recipe_id] = {"name": name, "price": price}
            return True
        return False
    
    def remove_recipe(self, recipe_id):
        """–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞"""
        if recipe_id in self.recipes:
            del self.recipes[recipe_id]
            return True
        return False
    
    def add_order(self, recipe_id, customer):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
        if recipe_id not in self.recipes:
            return None
            
        recipe = self.recipes[recipe_id]
        order_id = int(time.time() * 1000)
        
        order = {
            "id": order_id,
            "recipe_id": recipe_id,
            "recipe_name": recipe["name"],
            "customer": customer,
            "status": "–ì–æ—Ç–æ–≤–∏—Ç—Å—è",
            "time": datetime.now().strftime("%H:%M:%S"),
            "price": recipe["price"],
            "timestamp": time.time()
        }
        
        self.orders.append(order)
        return order
    
    def remove_order(self, order_id):
        """–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞"""
        self.orders = [order for order in self.orders if order["id"] != order_id]
        return True
    
    def get_order_by_id(self, order_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ ID"""
        for order in self.orders:
            if order["id"] == order_id:
                return order
        return None
    
    def get_all_orders(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤ (–¥–ª—è –∞–¥–º–∏–Ω–∞)"""
        return self.orders
    
    def update_online_users(self, users_list):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –æ–Ω–ª–∞–π–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        self.online_users = users_list
    
    def sync_orders(self, firebase_orders):
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å Firebase"""
        self.orders = firebase_orders
    
    def add_notification(self, message):
        """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        self.notifications.append({
            "message": message,
            "time": datetime.now().strftime("%H:%M:%S")
        })
    
    def get_notifications(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        return self.notifications
    
    def clear_notifications(self):
        """–û—á–∏—Å—Ç–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        self.notifications.clear()